{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/app.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","e","preventDefault","props","onSubmit","className","this","type","value","onChange","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","res","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"qQAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFCwBRC,E,2MA1BXC,MAAQ,CAAEC,KAAK,I,EAEfC,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,wEAGvB,IAAD,OACL,OACE,yBAAKM,UAAU,cACb,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,WAC3C,yBAAKA,UAAU,SACb,+CACA,2BACEE,KAAK,OACLC,MAAQF,KAAKR,MAAMC,KACnBU,SAAU,SAAAR,GAAC,OAAI,EAAKS,SAAS,CAAEX,KAAME,EAAEU,OAAOH,kB,GAlBxCI,IAAMC,WCgCfC,G,kBA/BX,WAAYX,GAAQ,IAAD,8BACf,4CAAMA,KAWVY,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAMN,EAAS,IAElC,EAAKN,SAAS,CAAEU,WAdhB,EAAKtB,MAAQ,CAAEsB,MAAO,GAEtB,EAAKH,SAAWL,IAAMW,YALP,E,iFASfjB,KAAKW,SAASC,QAAQM,iBAAiB,OAAQlB,KAAKS,Y,+BAW9C,IAAD,EACyBT,KAAKH,MAAMsB,MAAjCC,EADH,EACGA,YAAaC,EADhB,EACgBA,KAErB,OACI,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUvB,KAAKR,MAAMsB,SACzC,yBAAKU,IAAKxB,KAAKW,SAAUc,IAAKL,EAAaM,IAAKL,EAAKM,e,GA1B7CrB,IAAMC,YCUfqB,EARG,SAAC/B,GACf,IAAMgC,EAAShC,EAAMgC,OAAOC,KAAI,SAACX,GAC7B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG5C,OAAO,yBAAKpB,UAAU,cAAc8B,ICmBzBI,E,2MAtBXzC,MAAQ,CAAEqC,OAAQ,I,EAElBK,e,uCAAiB,WAAOzC,GAAP,eAAA0C,EAAA,sEACKC,EAASC,IAAI,iBAAkB,CAC7CC,OAAQ,CACJC,MAAO9C,KAHF,OACP+C,EADO,OAOb,EAAKpC,SAAS,CAAEyB,OAAQW,EAAIC,KAAKC,UAPpB,2C,8HAWb,OACI,yBAAK3C,UAAU,eAAeuB,MAAO,CAACqB,UAAU,SAC5C,kBAAC,EAAD,CAAW7C,SAAUE,KAAKkC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQ7B,KAAKR,MAAMqC,c,GAjB5BvB,IAAMC,WCDxBqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.a56cb2e3.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID e3a560040278efa93220060acd19ca3faa693e19192a2b5bd2c6083c7d95c078'\n    }\n})","import React from 'react';\n\nclass SearchBar extends React.Component {\n    state = { term:'' };\n\n    onFormSubmit = (e) => {\n      e.preventDefault();\n\n      this.props.onSubmit(this.state.term);\n    }\n\n    render() {\n        return (\n          <div className=\"ui segment\">\n            <form onSubmit={this.onFormSubmit} className=\"ui form\">\n              <div className=\"field\">\n                <label>Image Search</label>\n                <input\n                  type=\"text\"\n                  value={ this.state.term }\n                  onChange={e => this.setState({ term: e.target.value })}\n                />\n              </div>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { spans: 0 };\n\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n\n        const spans = Math.ceil( height / 10 );\n\n        this.setState({ spans });\n    }\n\n    render() {\n        const { description, urls } = this.props.image;\n\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n                <img ref={this.imageRef} alt={description} src={urls.regular} />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;","import './ImageList.css';\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\nconst ImageList = (props) => {\n    const images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image} />\n    })\n\n    return <div className=\"image-list\">{images}</div>;\n};\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\nclass App extends React.Component {\n    state = { images: [] };\n\n    onSearchSubmit = async (term) => {\n        const res = await unsplash.get('/search/photos', {\n            params: {\n                query: term\n            }\n        });\n\n        this.setState({ images: res.data.results });\n    }\n\n    render() {\n        return (\n            <div className=\"ui container\" style={{marginTop:'10px'}}>\n                <SearchBar onSubmit={this.onSearchSubmit} />\n                <ImageList images={this.state.images} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}